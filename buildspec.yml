version: 0.2

phases:
  install:
    commands:
      # AWS Codebuild Go images use /go for the $GOPATH so let's symlink our
      # application source code into that directory structure.
      - ln -s "${CODEBUILD_SRC_DIR}" "/go/src/handler"

      # Install golint
      - go get -u github.com/golang/lint/golint

      # Install Testify to use common assertions and mocks in tests
      - go get -u github.com/stretchr/testify
  pre_build:
    commands:

      # Make sure we're in the project directory within our GOPATH
      - cd "/go/src/handler"

      # Fetch all dependencies
      - go get ./...

      # Ensure code passes all lint tests
      - golint -set_exit_status

      # Check for common Go application problems with 'go tool vet'
      - go tool vet .

      # Run all tests included with our application
      - go test .
      - echo CODEBUILD_SRC_DIR - $CODEBUILD_SRC_DIR
      - echo GOPATH - $GOPATH

  build:
    commands:
      - echo Build started on `date`
      - echo Compiling the Go code...
      - go build -o klog main.go 
  post_build:
    commands:
      - echo Build completed on `date`
artifacts:
  files:
    - klog
    - appspec.yml
  discard-paths: yes
